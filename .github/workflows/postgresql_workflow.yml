name: Tests with PostgreSQL

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: exercises
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install psycopg2-binary
    
    - name: Wait for PostgreSQL
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done
    
    - name: Analyze project structure
      run: |
        echo "=== ANALIZANDO ESTRUCTURA DEL PROYECTO ==="
        echo "Estructura de archivos:"
        find . -name "*.py" -type f | head -20 || echo "No hay archivos Python"
        echo ""
        echo "Archivos encontrados:"
        ls -la
        echo ""
        echo "Buscando posibles puntos de entrada:"
        find . -name "*.py" -exec grep -l "def test_" {} \; || echo "No hay funciones test_"
        find . -name "*.py" -exec grep -l "import unittest" {} \; || echo "No hay unittest"
        find . -name "*.py" -exec grep -l "main" {} \; || echo "No hay main"
    
    - name: Create basic tests
      run: |
        echo "=== CREANDO TESTS BÁSICOS ==="
        mkdir -p tests
        
        # Crear test básico
        cat > tests/test_basic.py << 'EOF'
def test_basic_math():
    assert 1 + 1 == 2

def test_environment():
    import os
    database_url = os.getenv('DATABASE_URL')
    assert database_url is not None
    assert 'postgresql' in database_url
EOF
        
        # Crear test de base de datos
        cat > tests/test_database.py << 'EOF'
import pytest
import os

def test_database_connection():
    try:
        import psycopg2
        database_url = os.getenv('DATABASE_URL')
        if database_url:
            connection = psycopg2.connect(database_url)
            cursor = connection.cursor()
            cursor.execute("SELECT version();")
            version = cursor.fetchone()
            print(f"PostgreSQL version: {version[0]}")
            cursor.close()
            connection.close()
            print("Conexión a PostgreSQL exitosa")
        else:
            pytest.fail("DATABASE_URL no está configurada")
    except Exception as e:
        pytest.fail(f"Error en conexión a BD: {str(e)}")
EOF
        
        echo "Tests básicos creados"
    
    - name: Verify test files
      run: |
        echo "=== VERIFICANDO ARCHIVOS DE TEST ==="
        ls -la tests/
        echo "=== CONTENIDO DE TESTS ==="
        cat tests/test_basic.py
        echo "---"
        cat tests/test_database.py
    
    - name: Run tests
      run: python -m pytest tests/ -v --tb=short
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/exercises
    
    - name: Success message
      if: success()
      run: echo "¡Todos los tests pasaron correctamente!"
